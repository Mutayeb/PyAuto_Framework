{"name": "create booking form payload and verfy that booking id should not be null", "status": "broken", "statusDetails": {"message": "TypeError: Object of type function is not JSON serializable", "trace": "self = <crud.test_crud.TestCrudBooking object at 0x000002726486f340>\n\n    @pytest.fixture()\n    def create_token(self):\n>       post_request(url=apiConstants.url_create_token(), headers=Util().common_headers_json,auth=None, payload=payload_create_booking, in_json=False)\n\ntests\\test\\crud\\test_crud.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc\\helpers\\api_requests_wrapper.py:11: in post_request\n    post_response = requests.post(url=url,headers=headers,auth=auth,data=json.dumps(payload))\nC:\\msys64\\mingw64\\lib\\python3.10\\json\\__init__.py:231: in dumps\n    return _default_encoder.encode(obj)\nC:\\msys64\\mingw64\\lib\\python3.10\\json\\encoder.py:199: in encode\n    chunks = self.iterencode(o, _one_shot=True)\nC:\\msys64\\mingw64\\lib\\python3.10\\json\\encoder.py:257: in iterencode\n    return _iterencode(o, 0)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.encoder.JSONEncoder object at 0x0000027261996980>, o = <function payload_create_booking at 0x00000272647a7b50>\n\n    def default(self, o):\n        \"\"\"Implement this method in a subclass such that it returns\n        a serializable object for ``o``, or calls the base implementation\n        (to raise a ``TypeError``).\n    \n        For example, to support arbitrary iterators, you could\n        implement default like this::\n    \n            def default(self, o):\n                try:\n                    iterable = iter(o)\n                except TypeError:\n                    pass\n                else:\n                    return list(iterable)\n                # Let the base class default method raise the TypeError\n                return JSONEncoder.default(self, o)\n    \n        \"\"\"\n>       raise TypeError(f'Object of type {o.__class__.__name__} '\n                        f'is not JSON serializable')\nE       TypeError: Object of type function is not JSON serializable\n\nC:\\msys64\\mingw64\\lib\\python3.10\\json\\encoder.py:179: TypeError"}, "description": "verify that full update with a booking id an dtoken is working", "start": 1735482930408, "stop": 1735482930408, "uuid": "72131d64-3cf2-41ff-a4a1-1df3c569f8db", "historyId": "58059039fcf7d97d6e8ed76d7ace03da", "testCaseId": "58059039fcf7d97d6e8ed76d7ace03da", "fullName": "tests.test.crud.test_crud.TestCrudBooking#test_update_booking_id_token", "labels": [{"name": "parentSuite", "value": "tests.test.crud"}, {"name": "suite", "value": "test_crud"}, {"name": "subSuite", "value": "TestCrudBooking"}, {"name": "host", "value": "Dell15"}, {"name": "thread", "value": "11104-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test.crud.test_crud"}]}